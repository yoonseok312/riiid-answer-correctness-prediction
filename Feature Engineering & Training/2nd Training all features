{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "yoon_train_with_hung_trueskill_mu_sigma.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "machine_shape": "hm"
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "accelerator": "GPU"
  },
  "cells": [
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "lFna5pzBGVBc",
        "outputId": "ad981bb4-329e-4905-dbe7-526c2722ae37"
      },
      "source": [
        "!pip install -U pyarrow"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already up-to-date: pyarrow in /usr/local/lib/python3.6/dist-packages (2.0.0)\n",
            "Requirement already satisfied, skipping upgrade: numpy>=1.14 in /usr/local/lib/python3.6/dist-packages (from pyarrow) (1.19.4)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "HQR6XejAGXkP",
        "outputId": "cad5ab14-30c6-4fd8-b46e-e252fb7c69ec"
      },
      "source": [
        "!pip3 uninstall -y lightgbm"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Uninstalling lightgbm-3.1.1:\n",
            "  Successfully uninstalled lightgbm-3.1.1\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "KAfW4gUIGeOF"
      },
      "source": [
        "!apt-get install -y -qq libboost-all-dev"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Bt2ETNkoGg01",
        "outputId": "98b3a5d0-9421-4ea0-81cf-e63c72d3f0a5"
      },
      "source": [
        "!pip3 install lightgbm --install-option=--gpu --install-option=\"--opencl-include-dir=/usr/local/cuda/include/\" --install-option=\"--opencl-library=/usr/local/cuda/lib64/libOpenCL.so\" "
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/pip/_internal/commands/install.py:283: UserWarning: Disabling all use of wheels due to the use of --build-options / --global-options / --install-options.\n",
            "  cmdoptions.check_install_build_global(options)\n",
            "Collecting lightgbm\n",
            "  Using cached https://files.pythonhosted.org/packages/cf/65/368931f1f234149e14fc6075dbeb1ad8a8aebb105aa11fe8631c72c1bdcf/lightgbm-3.1.1.tar.gz\n",
            "Requirement already satisfied: wheel in /usr/local/lib/python3.6/dist-packages (from lightgbm) (0.36.2)\n",
            "Requirement already satisfied: numpy in /usr/local/lib/python3.6/dist-packages (from lightgbm) (1.19.4)\n",
            "Requirement already satisfied: scipy in /usr/local/lib/python3.6/dist-packages (from lightgbm) (1.4.1)\n",
            "Requirement already satisfied: scikit-learn!=0.22.0 in /usr/local/lib/python3.6/dist-packages (from lightgbm) (0.22.2.post1)\n",
            "Requirement already satisfied: joblib>=0.11 in /usr/local/lib/python3.6/dist-packages (from scikit-learn!=0.22.0->lightgbm) (1.0.0)\n",
            "Skipping wheel build for lightgbm, due to binaries being disabled for it.\n",
            "Installing collected packages: lightgbm\n",
            "    Running setup.py install for lightgbm ... \u001b[?25l\u001b[?25hdone\n",
            "Successfully installed lightgbm-3.1.1\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "UdXn_azpGhWw"
      },
      "source": [
        "import os\n",
        "import sys\n",
        "import time\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "from tqdm.notebook import tqdm\n",
        "import matplotlib.pyplot as plt\n",
        "import gc\n",
        "import random\n",
        "from pickle import dump, load\n",
        "\n",
        "pd.options.mode.chained_assignment = None"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "FkocNSNrGjdB"
      },
      "source": [
        "import lightgbm as lgb"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HSFRaz2mGnNG"
      },
      "source": [
        "def read_csv(file_name = \"train.csv\", dtype = None, skiprows = None, nrows = None, usecols = None):\n",
        "    data = pd.read_csv(file_name, dtype=dtype, skiprows = skiprows, nrows = nrows, low_memory = True, header = 0, usecols = usecols)\n",
        "    return data\n",
        "\n",
        "def read_feather(file_name = \"train.feather\"):\n",
        "    data = pd.read_feather(file_name)\n",
        "    return data"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "0BV6oT_EGoi3"
      },
      "source": [
        "tdf = read_feather(\"/content/drive/MyDrive/data/tdf_tdf1_with_mean_trueskill_sigma_mu_hung.feather\")\n"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 422
        },
        "id": "wvydrig90MVz",
        "outputId": "8dff031d-2d22-4163-cc15-b65aba8457a4"
      },
      "source": [
        "tdf"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>ts_delta</th>\n",
              "      <th>row_id</th>\n",
              "      <th>user_id</th>\n",
              "      <th>content_id</th>\n",
              "      <th>task_container_id</th>\n",
              "      <th>answered_correctly</th>\n",
              "      <th>prior_question_elapsed_time</th>\n",
              "      <th>prior_question_had_explanation</th>\n",
              "      <th>part</th>\n",
              "      <th>t1</th>\n",
              "      <th>num_tag</th>\n",
              "      <th>u_attempt_c</th>\n",
              "      <th>bundle_id</th>\n",
              "      <th>total_explained</th>\n",
              "      <th>10_recent_correctness</th>\n",
              "      <th>10_recent_mean_gap</th>\n",
              "      <th>mean_elapsed</th>\n",
              "      <th>mean_gap</th>\n",
              "      <th>this_bundle_elapsed_time_mean</th>\n",
              "      <th>u_chance</th>\n",
              "      <th>u_attempts</th>\n",
              "      <th>c_chance</th>\n",
              "      <th>c_attempts</th>\n",
              "      <th>u_part_chance</th>\n",
              "      <th>u_part_attempts</th>\n",
              "      <th>u_skill_chance</th>\n",
              "      <th>u_skill_attempts</th>\n",
              "      <th>t_chance</th>\n",
              "      <th>t_attempts</th>\n",
              "      <th>prev_cor</th>\n",
              "      <th>prev_t1</th>\n",
              "      <th>trueskill_probability</th>\n",
              "      <th>mu</th>\n",
              "      <th>sigma</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>156</td>\n",
              "      <td>3281628</td>\n",
              "      <td>70615759</td>\n",
              "      <td>11566</td>\n",
              "      <td>1458</td>\n",
              "      <td>1</td>\n",
              "      <td>35</td>\n",
              "      <td>1</td>\n",
              "      <td>7</td>\n",
              "      <td>165</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>8386</td>\n",
              "      <td>2259</td>\n",
              "      <td>1.000000</td>\n",
              "      <td>180.100006</td>\n",
              "      <td>38</td>\n",
              "      <td>10592</td>\n",
              "      <td>63</td>\n",
              "      <td>0.774462</td>\n",
              "      <td>2279</td>\n",
              "      <td>0.718750</td>\n",
              "      <td>96</td>\n",
              "      <td>0.923529</td>\n",
              "      <td>170</td>\n",
              "      <td>0.752115</td>\n",
              "      <td>1182</td>\n",
              "      <td>0.687531</td>\n",
              "      <td>51362</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.939680</td>\n",
              "      <td>0.609461</td>\n",
              "      <td>0.021726</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>203</td>\n",
              "      <td>32179162</td>\n",
              "      <td>689491283</td>\n",
              "      <td>6830</td>\n",
              "      <td>1431</td>\n",
              "      <td>1</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>38</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>5167</td>\n",
              "      <td>1569</td>\n",
              "      <td>0.600098</td>\n",
              "      <td>166.500000</td>\n",
              "      <td>27</td>\n",
              "      <td>1933</td>\n",
              "      <td>31</td>\n",
              "      <td>0.641952</td>\n",
              "      <td>1578</td>\n",
              "      <td>0.913342</td>\n",
              "      <td>4085</td>\n",
              "      <td>0.677419</td>\n",
              "      <td>279</td>\n",
              "      <td>0.616908</td>\n",
              "      <td>1313</td>\n",
              "      <td>0.625783</td>\n",
              "      <td>13967</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.978214</td>\n",
              "      <td>0.464083</td>\n",
              "      <td>0.020196</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>203</td>\n",
              "      <td>32179163</td>\n",
              "      <td>689491283</td>\n",
              "      <td>6829</td>\n",
              "      <td>1431</td>\n",
              "      <td>1</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>77</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>5167</td>\n",
              "      <td>1570</td>\n",
              "      <td>0.700195</td>\n",
              "      <td>175.800003</td>\n",
              "      <td>27</td>\n",
              "      <td>1933</td>\n",
              "      <td>31</td>\n",
              "      <td>0.642179</td>\n",
              "      <td>1579</td>\n",
              "      <td>0.834761</td>\n",
              "      <td>4085</td>\n",
              "      <td>0.678571</td>\n",
              "      <td>280</td>\n",
              "      <td>0.617199</td>\n",
              "      <td>1314</td>\n",
              "      <td>0.688983</td>\n",
              "      <td>57146</td>\n",
              "      <td>1</td>\n",
              "      <td>180</td>\n",
              "      <td>0.947830</td>\n",
              "      <td>0.464083</td>\n",
              "      <td>0.020196</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>203</td>\n",
              "      <td>32179164</td>\n",
              "      <td>689491283</td>\n",
              "      <td>6832</td>\n",
              "      <td>1431</td>\n",
              "      <td>1</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>102</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>5167</td>\n",
              "      <td>1571</td>\n",
              "      <td>0.700195</td>\n",
              "      <td>179.199997</td>\n",
              "      <td>27</td>\n",
              "      <td>1933</td>\n",
              "      <td>31</td>\n",
              "      <td>0.642405</td>\n",
              "      <td>1580</td>\n",
              "      <td>0.651578</td>\n",
              "      <td>4087</td>\n",
              "      <td>0.679715</td>\n",
              "      <td>281</td>\n",
              "      <td>0.617490</td>\n",
              "      <td>1315</td>\n",
              "      <td>0.655158</td>\n",
              "      <td>5432</td>\n",
              "      <td>-1</td>\n",
              "      <td>0</td>\n",
              "      <td>0.704824</td>\n",
              "      <td>0.464083</td>\n",
              "      <td>0.020196</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>203</td>\n",
              "      <td>32179165</td>\n",
              "      <td>689491283</td>\n",
              "      <td>6831</td>\n",
              "      <td>1431</td>\n",
              "      <td>1</td>\n",
              "      <td>27</td>\n",
              "      <td>1</td>\n",
              "      <td>6</td>\n",
              "      <td>42</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>5167</td>\n",
              "      <td>1572</td>\n",
              "      <td>0.700195</td>\n",
              "      <td>182.600006</td>\n",
              "      <td>27</td>\n",
              "      <td>1933</td>\n",
              "      <td>31</td>\n",
              "      <td>0.642631</td>\n",
              "      <td>1581</td>\n",
              "      <td>0.548458</td>\n",
              "      <td>4086</td>\n",
              "      <td>0.680851</td>\n",
              "      <td>282</td>\n",
              "      <td>0.617781</td>\n",
              "      <td>1316</td>\n",
              "      <td>0.595217</td>\n",
              "      <td>23319</td>\n",
              "      <td>1</td>\n",
              "      <td>78</td>\n",
              "      <td>0.508156</td>\n",
              "      <td>0.464083</td>\n",
              "      <td>0.020196</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24999995</th>\n",
              "      <td>50</td>\n",
              "      <td>66966646</td>\n",
              "      <td>1423439759</td>\n",
              "      <td>5319</td>\n",
              "      <td>5</td>\n",
              "      <td>1</td>\n",
              "      <td>34</td>\n",
              "      <td>0</td>\n",
              "      <td>5</td>\n",
              "      <td>71</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>3888</td>\n",
              "      <td>0</td>\n",
              "      <td>0.399902</td>\n",
              "      <td>25.833334</td>\n",
              "      <td>29</td>\n",
              "      <td>31</td>\n",
              "      <td>22</td>\n",
              "      <td>0.400000</td>\n",
              "      <td>5</td>\n",
              "      <td>0.740994</td>\n",
              "      <td>3359</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>4</td>\n",
              "      <td>0.500000</td>\n",
              "      <td>4</td>\n",
              "      <td>0.605766</td>\n",
              "      <td>57889</td>\n",
              "      <td>1</td>\n",
              "      <td>128</td>\n",
              "      <td>0.548642</td>\n",
              "      <td>0.352121</td>\n",
              "      <td>0.029414</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24999996</th>\n",
              "      <td>23</td>\n",
              "      <td>38813660</td>\n",
              "      <td>825706490</td>\n",
              "      <td>11775</td>\n",
              "      <td>1241</td>\n",
              "      <td>1</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>2</td>\n",
              "      <td>130</td>\n",
              "      <td>4</td>\n",
              "      <td>0</td>\n",
              "      <td>8492</td>\n",
              "      <td>2001</td>\n",
              "      <td>0.899902</td>\n",
              "      <td>56.799999</td>\n",
              "      <td>39</td>\n",
              "      <td>9871</td>\n",
              "      <td>19</td>\n",
              "      <td>0.849975</td>\n",
              "      <td>2013</td>\n",
              "      <td>0.535966</td>\n",
              "      <td>709</td>\n",
              "      <td>0.903226</td>\n",
              "      <td>341</td>\n",
              "      <td>0.907723</td>\n",
              "      <td>997</td>\n",
              "      <td>0.675708</td>\n",
              "      <td>6276</td>\n",
              "      <td>1</td>\n",
              "      <td>142</td>\n",
              "      <td>0.790074</td>\n",
              "      <td>0.608472</td>\n",
              "      <td>0.024056</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24999997</th>\n",
              "      <td>30</td>\n",
              "      <td>55486068</td>\n",
              "      <td>1177162122</td>\n",
              "      <td>4246</td>\n",
              "      <td>2866</td>\n",
              "      <td>0</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>52</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>2815</td>\n",
              "      <td>4091</td>\n",
              "      <td>0.099976</td>\n",
              "      <td>45526.601562</td>\n",
              "      <td>34</td>\n",
              "      <td>1804</td>\n",
              "      <td>25</td>\n",
              "      <td>0.659874</td>\n",
              "      <td>4122</td>\n",
              "      <td>0.402053</td>\n",
              "      <td>3313</td>\n",
              "      <td>0.611959</td>\n",
              "      <td>1639</td>\n",
              "      <td>0.654707</td>\n",
              "      <td>3038</td>\n",
              "      <td>0.603925</td>\n",
              "      <td>1965</td>\n",
              "      <td>0</td>\n",
              "      <td>95</td>\n",
              "      <td>0.259198</td>\n",
              "      <td>0.439662</td>\n",
              "      <td>0.020647</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24999998</th>\n",
              "      <td>32</td>\n",
              "      <td>61983663</td>\n",
              "      <td>1315660353</td>\n",
              "      <td>6250</td>\n",
              "      <td>1238</td>\n",
              "      <td>1</td>\n",
              "      <td>15</td>\n",
              "      <td>1</td>\n",
              "      <td>5</td>\n",
              "      <td>38</td>\n",
              "      <td>1</td>\n",
              "      <td>0</td>\n",
              "      <td>4819</td>\n",
              "      <td>1206</td>\n",
              "      <td>0.799805</td>\n",
              "      <td>28.100000</td>\n",
              "      <td>22</td>\n",
              "      <td>1826</td>\n",
              "      <td>22</td>\n",
              "      <td>0.588623</td>\n",
              "      <td>1213</td>\n",
              "      <td>0.784469</td>\n",
              "      <td>7971</td>\n",
              "      <td>0.550725</td>\n",
              "      <td>966</td>\n",
              "      <td>0.550495</td>\n",
              "      <td>1010</td>\n",
              "      <td>0.623493</td>\n",
              "      <td>31747</td>\n",
              "      <td>1</td>\n",
              "      <td>165</td>\n",
              "      <td>0.782389</td>\n",
              "      <td>0.404554</td>\n",
              "      <td>0.019944</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24999999</th>\n",
              "      <td>1689</td>\n",
              "      <td>27908882</td>\n",
              "      <td>595554894</td>\n",
              "      <td>3145</td>\n",
              "      <td>1907</td>\n",
              "      <td>1</td>\n",
              "      <td>43</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>142</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "      <td>1983</td>\n",
              "      <td>2769</td>\n",
              "      <td>0.700195</td>\n",
              "      <td>46166.398438</td>\n",
              "      <td>41</td>\n",
              "      <td>9153</td>\n",
              "      <td>23</td>\n",
              "      <td>0.681884</td>\n",
              "      <td>2782</td>\n",
              "      <td>0.804444</td>\n",
              "      <td>1575</td>\n",
              "      <td>0.723684</td>\n",
              "      <td>380</td>\n",
              "      <td>0.705243</td>\n",
              "      <td>1564</td>\n",
              "      <td>0.688073</td>\n",
              "      <td>33291</td>\n",
              "      <td>1</td>\n",
              "      <td>140</td>\n",
              "      <td>0.969178</td>\n",
              "      <td>0.552269</td>\n",
              "      <td>0.020660</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>25000000 rows × 34 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "          ts_delta    row_id  ...        mu     sigma\n",
              "0              156   3281628  ...  0.609461  0.021726\n",
              "1              203  32179162  ...  0.464083  0.020196\n",
              "2              203  32179163  ...  0.464083  0.020196\n",
              "3              203  32179164  ...  0.464083  0.020196\n",
              "4              203  32179165  ...  0.464083  0.020196\n",
              "...            ...       ...  ...       ...       ...\n",
              "24999995        50  66966646  ...  0.352121  0.029414\n",
              "24999996        23  38813660  ...  0.608472  0.024056\n",
              "24999997        30  55486068  ...  0.439662  0.020647\n",
              "24999998        32  61983663  ...  0.404554  0.019944\n",
              "24999999      1689  27908882  ...  0.552269  0.020660\n",
              "\n",
              "[25000000 rows x 34 columns]"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 9
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "_EywjdFnHItl"
      },
      "source": [
        "vdf = read_feather(\"/content/drive/MyDrive/data/vdf_with_mean_trueskill_sigma_mu_hung.feather\")"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BHT88sj6HKU7"
      },
      "source": [
        "TARGET = 'answered_correctly'\n",
        "drop_cols = ['row_id', 'user_id', 'content_id', 'bundle_id', 'answered_correctly']\n",
        "cat_cols = ['prior_question_had_explanation', 'part', 't1', 'num_tag', 'prev_cor', 'prev_t1']"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "P1G1EV-ZHLjw",
        "outputId": "d08f92b2-9bb0-415f-dae9-d3eab32caa96"
      },
      "source": [
        "y_train = tdf[TARGET]\n",
        "y_val = vdf[TARGET]\n",
        "tdf.drop(drop_cols, axis=1, inplace=True)\n",
        "vdf.drop(drop_cols, axis=1, inplace=True)\n",
        "gc.collect()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 12
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "CMN9axAVHNA5"
      },
      "source": [
        "tdf.fillna(-1, inplace = True)\n",
        "vdf.fillna(-1, inplace = True)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "ecaAOhopHOd8"
      },
      "source": [
        "feat_cols = list(tdf.columns)"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "OxevZxefHPwA"
      },
      "source": [
        "tdf = tdf.to_numpy()\n",
        "vdf = vdf.to_numpy()"
      ],
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gJZ-xyHYHRW-",
        "outputId": "47e75e0e-6499-4809-f1c0-ef8cddb9292c"
      },
      "source": [
        "lgb_train = lgb.Dataset(tdf, y_train)\n",
        "lgb_valid = lgb.Dataset(vdf, y_val)\n",
        "del tdf, y_train\n",
        "del vdf, y_val\n",
        "gc.collect()"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 16
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VAxDQuCVHSry",
        "outputId": "f7bf87c8-644c-478d-c3bc-b011df757471"
      },
      "source": [
        "params = {\n",
        "    'objective': 'binary',\n",
        "    'seed': 1103,\n",
        "    'metric': ['auc'],\n",
        "    'max_bin': 255,\n",
        "    'learning_rate': 0.01,\n",
        "    'num_leaves': 900,\n",
        "    'min_data_in_leaf': 255,\n",
        "#     'min_child_weight': 45.98,\n",
        "#     'min_split_gain': 0.00001,\n",
        "#     'lambda_l1':3.791,\n",
        "#     'lambda_l2': 1.288,\n",
        "#     'first_metric_only': True,\n",
        "    'bagging_fraction': 0.7,\n",
        "    'feature_fraction': 0.7,\n",
        "    'device_type': 'gpu',\n",
        "    'gpu_use_dp': True,\n",
        "    'gpu_platform_id': 0,\n",
        "    'gpu_device_id': 0,\n",
        "}\n",
        "\n",
        "model = lgb.train(params, \n",
        "                  lgb_train,\n",
        "                  valid_sets=[lgb_valid],\n",
        "                  verbose_eval=10,\n",
        "                  num_boost_round=10000,\n",
        "                  early_stopping_rounds=20,\n",
        "                  feature_name = feat_cols,\n",
        "                  categorical_feature = cat_cols,\n",
        "                  init_model = \"/content/drive/MyDrive/data/lgbm_model_hung_trueskill_mean_sigma_mu.txt\"\n",
        "                 )"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/lightgbm/basic.py:1555: UserWarning: categorical_feature in Dataset is overridden.\n",
            "New categorical_feature is ['num_tag', 'part', 'prev_cor', 'prev_t1', 'prior_question_had_explanation', 't1']\n",
            "  'New categorical_feature is {}'.format(sorted(list(categorical_feature))))\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "[LightGBM] [Warning] Met negative value in categorical features, will convert it to NaN\n",
            "[LightGBM] [Info] Number of positive: 16371580, number of negative: 8628420\n",
            "[LightGBM] [Info] This is the GPU trainer!!\n",
            "[LightGBM] [Info] Total Bins 5429\n",
            "[LightGBM] [Info] Number of data points in the train set: 25000000, number of used features: 29\n",
            "[LightGBM] [Info] Using requested OpenCL platform 0 device 0\n",
            "[LightGBM] [Info] Using GPU Device: Tesla P100-PCIE-16GB, Vendor: NVIDIA Corporation\n",
            "[LightGBM] [Info] Compiling OpenCL Kernel with 256 bins...\n",
            "[LightGBM] [Info] GPU programs have been built\n",
            "[LightGBM] [Info] Size of histogram bin entry: 16\n",
            "[LightGBM] [Info] 27 dense feature groups (667.57 MB) transferred to GPU in 0.580157 secs. 1 sparse feature groups\n"
          ],
          "name": "stdout"
        },
        {
          "output_type": "stream",
          "text": [
            "/usr/local/lib/python3.6/dist-packages/lightgbm/basic.py:1286: UserWarning: Overriding the parameters from Reference Dataset.\n",
            "  warnings.warn('Overriding the parameters from Reference Dataset.')\n",
            "/usr/local/lib/python3.6/dist-packages/lightgbm/basic.py:1098: UserWarning: categorical_column in param dict is overridden.\n",
            "  warnings.warn('{} in param dict is overridden.'.format(cat_alias))\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "Training until validation scores don't improve for 20 rounds\n",
            "[4400]\tvalid_0's auc: 0.787223\n",
            "[4410]\tvalid_0's auc: 0.787213\n",
            "Early stopping, best iteration is:\n",
            "[4396]\tvalid_0's auc: 0.787227\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "V62cKwM3HUcU",
        "outputId": "6f78fce4-6ebe-4768-c163-06d1849c98d5"
      },
      "source": [
        "print('auc:', model.best_score['valid_0']['auc'])"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "auc: 0.7872271798733045\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RmRBemOoHWUc",
        "outputId": "676b0ed8-3311-4ed8-be96-686663c5527e"
      },
      "source": [
        "model.save_model(\"/content/drive/MyDrive/data/lgbm_model_2nd_training_hung_trueskill_mean_sigma_mu.txt\")"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<lightgbm.basic.Booster at 0x7fec268d3748>"
            ]
          },
          "metadata": {
            "tags": []
          },
          "execution_count": 19
        }
      ]
    }
  ]
}